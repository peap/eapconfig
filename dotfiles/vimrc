" sources:
"   PV = Practical Vim, by Drew Neil
" WIKI = vim.wikia.com

" ----- Vundle -----
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'

Plugin 'editorconfig/editorconfig-vim.git'
Plugin 'ervandew/supertab'
Plugin 'nvie/vim-flake8.git'
Plugin 'scrooloose/nerdcommenter'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'

call vundle#end()
filetype plugin on
" ------------------

let g:SuperTabDefaultCompletionType = "<c-n>"

syntax on                  " syntax highlighting

set background=dark        " assume terminal has black background
set expandtab              " tabs are actually spaces
set hlsearch               " highlight search matches
set iskeyword+=-           " count hyphens as part of a word
set number                 " show line numbers
set ruler                  " show cursor position
"set shell=/bin/bash\ -i   " allow execution of aliases using :r! <cmd>
set shiftwidth=4           " tabs makes four spaces
set showcmd                " show current command
set smartindent            " smart auto-indent
"set spell                  " spell-check
set spelllang=en_us        " spell-check in US English
set tabstop=4              " tabs makes four spaces
set wildmode=longest,list  " ex-command completion acts like bash (PV, p.66)

syntax spell toplevel      " check spelling on toplevel things

if has("gui_running")
  colorscheme darkblue     " default colorscheme for GVim
  set lines=45 columns=90
else
  colorscheme evening
endif

" Don't move comments to beginning of the line
inoremap # X#

" Center the current line with <space>
nmap <space> zz

" Toggle paste-mode with F3
map <F3> :setlocal paste!<CR>

" Toggle line-numbering with F4
map <F4> :setlocal number!<CR>

" Toggle spell-check with F5
map <F5> :setlocal spell! spelllang=en_us<CR>

"" These mappings were added to mimic the behavior of TeXMakerX
"" --> F6: typeset the file in the buffer
"" --> F7: open the resultant PDF
"map <F6> :! pdflatex -shell-escape %<CR>
"map <F7> :! evince $(echo % \| sed s/\.tex$/\.pdf/g) &<CR>

" Re-sync syntax highlighting
map <F8> :syntax sync fromstart<CR>

" Use Natural syntax highlighting for Natural/webAgent objects
au BufNewFile,BufRead *.less set filetype=css

" Use Natural syntax highlighting for Natural/webAgent objects
au BufNewFile,BufRead *.ns* set filetype=natural
au BufNewFile,BufRead *.wb? set filetype=natural

"" Use spell-check on TeX and text files
"autocmd BufNewFile,BufRead *.tex set spell
"autocmd BufNewFile,BufRead *.txt set spell
"autocmd BufNewFile,BufRead README* set spell

" Use JavaScript syntax highlighting for JSON
au BufNewFile,BufRead *.json set filetype=javascript

" Use Ruby syntax highlighting for Puppet
au BufNewFile,BufRead *.pp set filetype=ruby

" Use HTML formatting for Express
au BufNewFile,BufRead *.ejs set filetype=html

" Tell vim to remember certain things when we exit, and restore cursor position
" to where we were when we reopen a file.
"  '10  :  marks will be remembered for up to 10 previously edited files
"  "100 :  will save up to 100 lines for each register
"  :20  :  up to 20 lines of command-line history will be remembered
"  %    :  saves and restores the buffer list
"  n... :  where to save the viminfo files
set viminfo='10,\"100,:200,%,n~/.viminfo
function! ResCur()
  if line("'\"") <= line("$")
    normal! g`"
    return 1
  endif
endfunction
augroup resCur
  autocmd!
  autocmd BufWinEnter * call ResCur()
augroup END
